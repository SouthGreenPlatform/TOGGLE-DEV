
############################
#
# Block for samtools flagstat
#
############################

$bamFile=0;
foreach my $file (@{$fileList}) #Checking the type of files that must be SAM or BAM
{

    if ($file =~ m/bam$/) # the file type is normally bam
    {
        if ($bamFile != 0) # Already a sam of a bam recognized, but more than one in the previous folder
        {
            toolbox::exportLog("ERROR : $0 : there are more than one single SAM/BAM file at $stepName step.\n",0);
        }
        $bamFile = $file;
    }
}

if ($bamFile eq '0') #No BAM file found in the previous folder
{
    toolbox::exportLog("ERROR : $0 : No BAMfile found in $previousDir at step $stepName.\n",0);
}

#########################################
# SAMtools FLAGSTAT  
#########################################    
($fileWithoutExtention,$readGroup) = pairing::extractName($bamFile); 
my $bamStatOut=$newDir."/".$fileWithoutExtention.".samtoolsFlagstat";
$softParameters = toolbox::extractHashSoft($optionRef,$stepName);                                       # recovery of specific parameters of bwa aln
samTools::samToolsFlagstat($bamFile,$bamStatOut);