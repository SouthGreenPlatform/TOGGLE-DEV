##### PREVIOUS BLOCK

# Mandatory beginning
$fileList = toolbox::readDir($previousDir);
$newDir = $previousDir;                                                                   #Picking up the current working directory
($shortDirName)=toolbox::extractPath($newDir);

#($stepOrder)= split /_/,$shortDirName;
#$stepName = $$hashOrder{$stepOrder};
#$stepF1=$stepName;
#$stepF1 =~ s/ /_/g;


toolbox::exportLog("#########################################\nINFOS: Stat analysis start $previousDir $newDir \n#########################################\n",1);

##### END PREVIOUS BLOCK

##########################################
# Statsmapping block
##########################################

#Correct variable populating
foreach my $file (@{$fileList})
{
    if ($file =~ m/bam$|sam$/) # the file type is normally bam or sam
    {
        if ( $samFileIn eq "NA" ) # first sam or bam found
        {
            $samFileIn = $file;
        }
        else
        {
            toolbox::exportLog("ERROR : $0 : there are more than two bam or sam files at $stepName step.\n",0);
        }
    }
}

if ($samFileIn eq "NA" )    # No sam or bam found
{
    toolbox::exportLog("ERROR : $0 : No SAM/BAM file provided at step $stepName\n",0) ;
}
else
{
    $samFileOut = $newDir."/"."$readGroup".".PICARDTOOLSSORT.bam";                              # name for the output file of picardtools sort sam
    stats::mapping($samFileIn,$samFileOut);
}